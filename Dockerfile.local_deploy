# Build stage 0
FROM erlang:24 as base
RUN apt-get update && apt-get install -y less ack lsb-release vim-tiny jq curl

#Set working directory
RUN mkdir /data
WORKDIR /data
COPY rebar.config .
COPY rebar.lock .
COPY rebar3 .

RUN ./rebar3 --version

RUN ./rebar3 compile

FROM base as compile
WORKDIR /data
COPY --from=base /data/_build .
COPY src src/
COPY priv priv/
COPY config config/
RUN mkdir -p /etc/dog_trainer
COPY config/sys.config.etc config/sys.config
COPY config/sys.config.local_docker /etc/dog_trainer/dog_trainer.config
COPY include include/
COPY scripts scripts/

#Build the release
RUN ./rebar3 release

RUN pwd
RUN find .

FROM compile as deploy

RUN mkdir -p /opt/dog_trainer
RUN mkdir -p /var/log/dog_trainer
RUN mkdir -p /tmp/dog_trainer
# Install the released application
COPY --from=compile /data/_build/default/rel/dog_trainer /opt/dog_trainer
RUN ls -latr /var/log/dog_trainer

# Expose relevant ports
EXPOSE 7070

RUN mkdir /etc/rabbitmq
COPY csc_certs.sh /etc/rabbitmq/ 

RUN mkdir -p /etc/dog_trainer/certs \
	&& mkdir -p /etc/dog_trainer/private \
	&& chmod 700 /etc/dog_trainer/private

CMD /bin/bash -c "/etc/rabbitmq/csc_certs.sh" && /bin/bash -c "/opt/dog_trainer/bin/dog_trainer foreground"
#CMD /bin/bash -c "/etc/rabbitmq/csc_certs.sh"  && /bin/bash -c "sleep infinity"
